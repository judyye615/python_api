# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
 # think of “push” as “trigger” 
  push:
    branches: 
      - 'feature/git_action'
 # “pull_request” as “pr”
  pull_request:
    branches: 
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8.0
      uses: actions/setup-python@v3
      with:
        python-version: "3.8.0"

    - name: Build Docker Images
      env:
         DOCKER_BUILDKIT: 1
      run: |
        docker build -t api-test . 
      working-directory: ${{ github.workspace }}

    - name: Test with pytest
      run: |
        docker run -v "/var/run/docker.sock":"/var/run/docker.sock" -v "/var/lib/docker/":"/github/workspace" --name myservice -e API_TEST="main.py" api-test
        docker inspect myservice
      working-directory: ${{ github.workspace }}
#     docker run -w /home/docker/code -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:${{ github.workspace}} --name myservice -e API_TEST="main.py" api-test
#        docker inspect myservice

    # - name: Copy Container file
    # docker run --workdir /home/docker/code --mount type=bind,source=$(pwd),destination=${{ github.workspace}} --name myservice -e API_TEST="main.py" api-test

    #   run: |         
    #     docker run --mount type=bind,source=/home/docker/code,destination=${{ github.workspace}} --name myservice api-test
    #     docker inspect myservice

    # - name: Copy Container file
    #   run: |
    #     docker run -v /var/run/docker.sock:/var/run/docker.sock --mount type=bind,source=/,target=${{ github.workspace}} --name service api-test
    #     docker inspect service 
# docker run -v /var/run/docker.sock:/var/run/docker.sock api-test
# docker run -e API_TEST="main.py" api-test


    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: ///reports/
        if-no-files-found: error
      if: ${{ always() }}





    